apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-service-account
  namespace: {{ .Values.ns }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-python-app
  labels:
    app: my-python-app
  namespace: {{ .Values.ns }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: my-python-app
  template:
    metadata:
      labels:
        app: my-python-app
    spec:
      serviceAccountName: my-service-account
      containers:
        - name: my-python-app
          image: andresia/assessment:18
          resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
          ports:
          - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: my-python-app
  namespace: {{ .Values.ns }}
spec:
  selector:
    app: my-python-app
  type: NodePort
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
      nodePort: 30083

---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: my-application-ingress
#   namespace: {{ .Values.ns }}
#   annotations:
#     traefik.ingress.kubernetes.io/router.entrypoints: web
# spec:
#   rules:
#   - http:
#       paths:
#       - path: /
#         pathType: Prefix
#         backend:
#           service:
#             name: my-python-app
#             port:
#               number: 8080
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: my-python-app
  namespace: {{ .Values.ns }}
spec:
  rules:
    http:
      paths:
      - path: /
        backend:
          serviceName: my-python-app
          servicePort: 8080

