apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-service-account
  namespace: {{ .Values.ns }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-python-app
  labels:
    app: my-python-app
  namespace: {{ .Values.ns }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: my-python-app
  template:
    metadata:
      labels:
        app: my-python-app
    spec:
      serviceAccountName: my-service-account
      containers:
        - name: my-python-app
          image: {{ .Values.image }}
          resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
          requests:
            cpu: "250m"
            memory: "64Mi"
          ports:
          - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: my-python-app
  namespace: {{ .Values.ns }}
spec:
  selector:
    app: my-python-app
  type: ClusterIP
  ports:
    - protocol: TCP
      port: 8085
      targetPort: 8080
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: ip-whitelist
  namespace: {{ .Values.ns }}
spec:
  ipWhiteList:
    sourceRange:
      - 109.110.241.40
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: my-app
  namespace: {{ .Values.ns }}
spec:
  entryPoints:
    - web
  routes:
    - match: Host(`assessment-as.com`)
      kind: Rule
      middlewares:
        - name: ip-whitelist
      services:
        - name: my-python-app
          port: 8085
